@* 이것이 우리의 새로운 '책장' 컴포넌트입니다. *@
@typeparam TItem

<MudPaper Class="d-flex flex-column" Style="height: 100%;">
    
    @* --- 실제 목록 --- *@
    <MudList T="TItem" Clickable="true" Style="overflow-y: auto; flex-grow: 1;" SelectedValueChanged="OnSelectionChanged">
        @* 밖에서 전달받은 데이터 목록(Items)을 반복합니다. *@
        @if (Items != null)
        {
            @foreach(TItem item in Items)
            {
                @ListItemTemplate(item)
            }
        }
    </MudList>

    @* --- 하단 버튼 --- *@
    <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ma-2">"New..."</MudButton>

</MudPaper>

@code {
    [Parameter] public List<TItem> Items { get; set; } = new List<TItem>();
    [Parameter] public required RenderFragment<TItem> ListItemTemplate { get; set; }
    [Parameter] public EventCallback<TItem> OnItemSelected { get; set; }
    private async Task OnSelectionChanged(TItem item)
    {
        await OnItemSelected.InvokeAsync(item);
    }
}